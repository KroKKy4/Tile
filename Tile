package com.company;

public abstract class Tile {
    private double sizeFloorX;
    private double sizeFloorY;
    private double sizeOneX;
    private double sizeOneY;
    private int amountX;
    private int amountY;
    private double price;
    private double [][][] arrM;
    public Tile(){
        this.sizeFloorX = 0;
        this.sizeFloorY = 0;
        this.sizeOneX = 0;
        this.sizeOneY = 0;
        this.price = 0;
        loading();
    }
    public Tile(int sizeFloorX, int sizeFloorY, int sizeOneX, int sizeOneY, int price){
        this.sizeFloorX = sizeFloorX;
        this.sizeFloorY = sizeFloorY;
        this.sizeOneX = sizeOneX;
        this.sizeOneY = sizeOneY;
        this.price = price;
        loading();
    }

    /*
    SizeFloor - размер самого пола; SizeOne - размер одной плиткиплитки;
    loading - считает сколько помещается плитки по ширине и высоте. В двоичный массив добавляются параметры плитки, каждая плитка запоминает свои размеры.
    Чтобы изменить n-ую плитку нужно, чтобы каждая плитка знала свои размеры
     */

    private void loading(){
        amountY = (int)Math.ceil(sizeFloorY/sizeOneY);
        amountX = (int)Math.ceil(sizeFloorX/sizeOneX);
        arrM =new double[amountX][amountY][3];
        for (int i = 0; i < amountX; i++) {
            for (int j = 0; j < amountY; j++) {
                arrM[i][j][0]=sizeOneX;
                arrM[i][j][1]=sizeOneY;
                arrM[i][j][2]=price;
            }
        }
    }

    //GetAmountTile - тотал цена пола, проходит по массиву и считает всю цену плитки.

    public double getAmountTile() {
        double sum =0;
        for (int i = 0; i < amountX; i++) {
            for (int j = 0; j < amountY; j++) {
                sum+=arrM[i][j][2];
            }
        }
        return sum;
    }

    public String getname(){
        return "-------";
    }

    public void setSizeFloorX(int sizeFloorX) {
        this.sizeFloorX = sizeFloorX;
    }

    public void setSizeFloorY(int sizeFloorY) {
        this.sizeFloorY = sizeFloorY;
    }

    public void setSizeOneX(int sizeOneX) {
        this.sizeOneX = sizeOneX;
    }

    public void setSizeOneY(int sizeOneY) {
        this.sizeOneY = sizeOneY;
    }

    public double getSizeFloorX() {
        return sizeFloorX;
    }


    //изменение n-ой плитки
    public void changeN (int x, int y, double sizeOneX, double sizeOneY, double price){
        arrM [x][y][0]=sizeOneX;
        arrM [x][y][1]=sizeOneY;
        arrM [x][y][2]=price;
    }

    //Перезаписывает значения
    public void setFloor(double sizeFloorX, double sizeFloorY, double sizeOneX, double sizeOneY, double price){
        this.sizeOneY = sizeOneY;
        this.sizeOneX = sizeOneX;
        this.sizeFloorY = sizeFloorY;
        this.sizeFloorX = sizeFloorX;
        this.price = price;
        loading();
    }
}
